#detect.py
python detect.py --cfg cfg/yolov3-tiny.cfg --weights weights/best.pt

#train.py
python train.py --data data/ship.data --cfg cfg/yolov3-tiny.cfg --epochs 10

#test.py
python test.py --data data/ship.data --cfg cfg/yolov3-tiny.cfg --weights weights/best.pt

model
ModuleList(
  (0): Sequential(
    (Conv2d): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (BatchNorm2d): BatchNorm2d(16, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
    (activation): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (2): Sequential(
    (Conv2d): Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (BatchNorm2d): BatchNorm2d(32, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
    (activation): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (4): Sequential(
    (Conv2d): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (BatchNorm2d): BatchNorm2d(64, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
    (activation): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (6): Sequential(
    (Conv2d): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (BatchNorm2d): BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
    (activation): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (8): Sequential(
    (Conv2d): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (BatchNorm2d): BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
    (activation): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (10): Sequential(
    (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (BatchNorm2d): BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
    (activation): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (11): Sequential(
    (ZeroPad2d): ZeroPad2d(padding=(0, 1, 0, 1), value=0.0)
    (MaxPool2d): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
  )
  (12): Sequential(
    (Conv2d): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (BatchNorm2d): BatchNorm2d(1024, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
    (activation): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (13): Sequential(
    (Conv2d): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (BatchNorm2d): BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
    (activation): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (14): Sequential(
    (Conv2d): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (BatchNorm2d): BatchNorm2d(512, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
    (activation): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (15): Sequential(
    (Conv2d): Conv2d(512, 33, kernel_size=(1, 1), stride=(1, 1))
  )
  (16): YOLOLayer()
  (17): FeatureConcat()
  (18): Sequential(
    (Conv2d): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (BatchNorm2d): BatchNorm2d(128, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
    (activation): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (19): Upsample(scale_factor=2.0, mode=nearest)
  (20): FeatureConcat()
  (21): Sequential(
    (Conv2d): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (BatchNorm2d): BatchNorm2d(256, eps=0.0001, momentum=0.03, affine=True, track_running_stats=True)
    (activation): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (22): Sequential(
    (Conv2d): Conv2d(256, 33, kernel_size=(1, 1), stride=(1, 1))
  )
  (23): YOLOLayer()
)